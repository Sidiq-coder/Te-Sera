// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./node_modules/@prisma/client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int       @id @default(autoincrement())
  username          String    @unique @db.VarChar(50)
  password          String    @db.VarChar(255)
  email             String    @unique @db.VarChar(100)
  nama              String    @db.VarChar(100)
  tanggalLahir      DateTime  @db.Date
  alamatTinggal     String    @db.Text
  foto              String    @db.VarChar(255)
  createdAt         DateTime  @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(dbgenerated("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP")) @db.Timestamp(0)
   auth              AuthToken[]
  session           Session[]
}

model AuthToken {
  id                  Int      @id @default(autoincrement())
  accessToken         String   @db.VarChar(255)
  refreshToken        String   @db.VarChar(255)
  accessTokenExpires  DateTime
  refreshTokenExpires DateTime
  revoked             Boolean  @default(false)
  userId              Int      @map("user_id")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Session {
  id          String   @id @default(uuid())
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  sessionToken String   @unique
  accessToken  String
  refreshToken String
  expires     DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])

}
